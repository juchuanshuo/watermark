<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myBlog.Dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.myBlog.domain.User">
		<id column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="user_name" jdbcType="CHAR" property="userName" />
		<result column="pass_word" jdbcType="CHAR" property="passWord" />
		<result column="permission" jdbcType="INTEGER" property="permission" />
		<result column="address" jdbcType="CHAR" property="address" />
		<result column="email" jdbcType="CHAR" property="email" />
		<result column="photo" jdbcType="VARCHAR" property="photo" />
		<result column="gender" jdbcType="INTEGER" property="gender" />
		<result column="phonenum" jdbcType="INTEGER" property="phonenum" />
		<result column="detail" jdbcType="VARCHAR" property="detail" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		user_id, user_name, pass_word, permission, address, email,
		photo, gender,
		phonenum,
		detail
	</sql>

	<select id="selectByExample" parameterType="com.myBlog.domain.UserExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.myBlog.domain.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.myBlog.domain.User">
		insert into user (user_id,
		user_name, pass_word,
		permission, address, email,
		photo, gender,
		phonenum,
		detail)
		values (#{userId,jdbcType=INTEGER},
		#{userName,jdbcType=CHAR},
		#{passWord,jdbcType=CHAR},
		#{permission,jdbcType=INTEGER}, #{address,jdbcType=CHAR},
		#{email,jdbcType=CHAR},
		#{photo,jdbcType=VARCHAR},
		#{gender,jdbcType=INTEGER},
		#{phonenum,jdbcType=INTEGER},
		#{detail,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.myBlog.domain.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="passWord != null">
				pass_word,
			</if>
			<if test="permission != null">
				permission,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="photo != null">
				photo,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="phonenum != null">
				phonenum,
			</if>
			<if test="detail != null">
				detail,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=CHAR},
			</if>
			<if test="passWord != null">
				#{passWord,jdbcType=CHAR},
			</if>
			<if test="permission != null">
				#{permission,jdbcType=INTEGER},
			</if>
			<if test="address != null">
				#{address,jdbcType=CHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=CHAR},
			</if>
			<if test="photo != null">
				#{photo,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=INTEGER},
			</if>
			<if test="phonenum != null">
				#{phonenum,jdbcType=INTEGER},
			</if>
			<if test="detail != null">
				#{detail,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.myBlog.domain.UserExample"
		resultType="java.lang.Long">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.userName != null">
				user_name = #{record.userName,jdbcType=CHAR},
			</if>
			<if test="record.passWord != null">
				pass_word = #{record.passWord,jdbcType=CHAR},
			</if>
			<if test="record.permission != null">
				permission = #{record.permission,jdbcType=INTEGER},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=CHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=CHAR},
			</if>
			<if test="record.photo != null">
				photo = #{record.photo,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=INTEGER},
			</if>
			<if test="record.phonenum != null">
				phonenum = #{record.phonenum,jdbcType=INTEGER},
			</if>
			<if test="record.detail != null">
				detail = #{record.detail,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set user_id = #{record.userId,jdbcType=INTEGER},
		user_name =
		#{record.userName,jdbcType=CHAR},
		pass_word =
		#{record.passWord,jdbcType=CHAR},
		permission =
		#{record.permission,jdbcType=INTEGER},
		address =
		#{record.address,jdbcType=CHAR},
		email = #{record.email,jdbcType=CHAR},
		photo = #{record.photo,jdbcType=VARCHAR},
		gender =
		#{record.gender,jdbcType=INTEGER},
		phonenum =
		#{record.phonenum,jdbcType=INTEGER},
		detail =
		#{record.detail,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.myBlog.domain.User">
		update user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=CHAR},
			</if>
			<if test="passWord != null">
				pass_word = #{passWord,jdbcType=CHAR},
			</if>
			<if test="permission != null">
				permission = #{permission,jdbcType=INTEGER},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=CHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=CHAR},
			</if>
			<if test="photo != null">
				photo = #{photo,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=INTEGER},
			</if>
			<if test="phonenum != null">
				phonenum = #{phonenum,jdbcType=INTEGER},
			</if>
			<if test="detail != null">
				detail = #{detail,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.myBlog.domain.User">
		update user
		set
		user_name = #{userName,jdbcType=CHAR},
		pass_word =
		#{passWord,jdbcType=CHAR},
		permission = #{permission,jdbcType=INTEGER},
		address = #{address,jdbcType=CHAR},
		email = #{email,jdbcType=CHAR},
		photo = #{photo,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=INTEGER},
		phonenum = #{phonenum,jdbcType=INTEGER},
		detail =
		#{detail,jdbcType=VARCHAR}
		where user_id = #{userId,jdbcType=INTEGER}
	</update>

	<!-- 以下为自己编写部分 -->
	<select id="findByUserName" parameterType="String"
		resultType="com.myBlog.domain.User">
		select * from user where user_name = #{0} and pass_word =
		#{1}
	</select>
</mapper>