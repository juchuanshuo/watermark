<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myBlog.Dao.ContentMapper">
	<resultMap id="BaseResultMap" type="com.myBlog.domain.Content">
		<id column="content_id" jdbcType="INTEGER" property="contentId" />
		<result column="content_type" jdbcType="INTEGER" property="contentType" />
		<result column="typeName" jdbcType="CHAR" property="typeName" />
		<result column="content_name" jdbcType="CHAR" property="contentName" />
		<result column="tiny_img" jdbcType="VARCHAR" property="tinyImg" />
		<result column="pageviews" jdbcType="INTEGER" property="pageviews" />
		<result column="conten_state" jdbcType="INTEGER" property="contenState" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="summary" jdbcType="CHAR" property="summary" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="author" jdbcType="CHAR" property="author" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.myBlog.domain.Content">
		<result column="content" jdbcType="LONGVARCHAR" property="content" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		content_id, content_type, content_name, tiny_img,
		pageviews, conten_state,
		create_time,
		summary, update_time, author
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="com.myBlog.domain.ContentExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from content
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.myBlog.domain.ContentExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from content
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from content
		where content_id = #{contentId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		content
		where content_id = #{contentId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.myBlog.domain.ContentExample">
		delete from content
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.myBlog.domain.Content">
		insert into content
		(content_id, content_type, content_name,
		tiny_img, pageviews,
		conten_state,
		create_time, summary, update_time,
		author, content)
		values
		(#{contentId,jdbcType=INTEGER}, #{contentType,jdbcType=INTEGER},
		#{contentName,jdbcType=CHAR},
		#{tinyImg,jdbcType=VARCHAR},
		#{pageviews,jdbcType=INTEGER}, #{contenState,jdbcType=INTEGER},
		#{createTime}, #{summary,jdbcType=CHAR},
		#{updateTime},
		#{author,jdbcType=CHAR}, #{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.myBlog.domain.Content">
		insert into content
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="contentId != null">
				content_id,
			</if>
			<if test="contentType != null">
				content_type,
			</if>
			<if test="contentName != null">
				content_name,
			</if>
			<if test="tinyImg != null">
				tiny_img,
			</if>
			<if test="pageviews != null">
				pageviews,
			</if>
			<if test="contenState != null">
				conten_state,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="summary != null">
				summary,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="author != null">
				author,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="contentId != null">
				#{contentId,jdbcType=INTEGER},
			</if>
			<if test="contentType != null">
				#{contentType,jdbcType=INTEGER},
			</if>
			<if test="contentName != null">
				#{contentName,jdbcType=CHAR},
			</if>
			<if test="tinyImg != null">
				#{tinyImg,jdbcType=VARCHAR},
			</if>
			<if test="pageviews != null">
				#{pageviews,jdbcType=INTEGER},
			</if>
			<if test="contenState != null">
				#{contenState,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="summary != null">
				#{summary,jdbcType=CHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="author != null">
				#{author,jdbcType=CHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.myBlog.domain.ContentExample"
		resultType="java.lang.Long">
		select count(*) from content
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update content
		<set>
			<if test="record.contentId != null">
				content_id = #{record.contentId,jdbcType=INTEGER},
			</if>
			<if test="record.contentType != null">
				content_type = #{record.contentType,jdbcType=INTEGER},
			</if>
			<if test="record.contentName != null">
				content_name = #{record.contentName,jdbcType=CHAR},
			</if>
			<if test="record.tinyImg != null">
				tiny_img = #{record.tinyImg,jdbcType=VARCHAR},
			</if>
			<if test="record.pageviews != null">
				pageviews = #{record.pageviews,jdbcType=INTEGER},
			</if>
			<if test="record.contenState != null">
				conten_state = #{record.contenState,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime},
			</if>
			<if test="record.summary != null">
				summary = #{record.summary,jdbcType=CHAR},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime},
			</if>
			<if test="record.author != null">
				author = #{record.author,jdbcType=CHAR},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update content
		set content_id = #{record.contentId,jdbcType=INTEGER},
		content_type = #{record.contentType,jdbcType=INTEGER},
		content_name =
		#{record.contentName,jdbcType=CHAR},
		tiny_img =
		#{record.tinyImg,jdbcType=VARCHAR},
		pageviews =
		#{record.pageviews,jdbcType=INTEGER},
		conten_state =
		#{record.contenState,jdbcType=INTEGER},
		create_time =
		#{record.createTime},
		summary = #{record.summary,jdbcType=CHAR},
		update_time = #{record.updateTime},
		author =
		#{record.author,jdbcType=CHAR},
		content =
		#{record.content,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update content
		set content_id = #{record.contentId,jdbcType=INTEGER},
		content_type = #{record.contentType,jdbcType=INTEGER},
		content_name =
		#{record.contentName,jdbcType=CHAR},
		tiny_img =
		#{record.tinyImg,jdbcType=VARCHAR},
		pageviews =
		#{record.pageviews,jdbcType=INTEGER},
		conten_state =
		#{record.contenState,jdbcType=INTEGER},
		create_time =
		#{record.createTime},
		summary = #{record.summary,jdbcType=CHAR},
		update_time = #{record.updateTime},
		author =
		#{record.author,jdbcType=CHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.myBlog.domain.Content">
		update content
		<set>
			<if test="contentType != null">
				content_type = #{contentType,jdbcType=INTEGER},
			</if>
			<if test="contentName != null">
				content_name = #{contentName,jdbcType=CHAR},
			</if>
			<if test="tinyImg != null">
				tiny_img = #{tinyImg,jdbcType=VARCHAR},
			</if>
			<if test="pageviews != null">
				pageviews = #{pageviews,jdbcType=INTEGER},
			</if>
			<if test="contenState != null">
				conten_state = #{contenState,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="summary != null">
				summary = #{summary,jdbcType=CHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="author != null">
				author = #{author,jdbcType=CHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where content_id = #{contentId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myBlog.domain.Content">
		update
		content
		set content_type = #{contentType,jdbcType=INTEGER},
		content_name = #{contentName,jdbcType=CHAR},
		tiny_img =
		#{tinyImg,jdbcType=VARCHAR},
		pageviews = #{pageviews,jdbcType=INTEGER},
		conten_state = #{contenState,jdbcType=INTEGER},
		create_time =
		#{createTime},
		summary = #{summary,jdbcType=CHAR},
		update_time =
		#{updateTime},
		author = #{author,jdbcType=CHAR},
		content =
		#{content,jdbcType=LONGVARCHAR}
		where content_id =
		#{contentId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.myBlog.domain.Content">
		update content
		set
		content_type = #{contentType,jdbcType=INTEGER},
		content_name =
		#{contentName,jdbcType=CHAR},
		tiny_img = #{tinyImg,jdbcType=VARCHAR},
		pageviews = #{pageviews,jdbcType=INTEGER},
		conten_state =
		#{contenState,jdbcType=INTEGER},
		create_time = #{createTime},
		summary =
		#{summary,jdbcType=CHAR},
		update_time = #{updateTime},
		author =
		#{author,jdbcType=CHAR}
		where content_id =
		#{contentId,jdbcType=INTEGER}
	</update>
	<!-- 以下为自己编写 -->
	<select id="getAll" resultMap="BaseResultMap">
		select c.content_id, t.type_name
		as typeName, c.content_name,
		c.pageviews, c.conten_state,
		c.create_time, c.summary, c.update_time,
		c.content
		from content c left
		join contentType t on c.content_type = t.content_type
	</select>
</mapper>