<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myBlog.Dao.SequenceMapper">
	<resultMap id="BaseResultMap" type="com.myBlog.domain.Sequence">
		<id column="name" jdbcType="VARCHAR" property="name" />
		<result column="current_value" jdbcType="INTEGER" property="currentValue" />
		<result column="increment" jdbcType="INTEGER" property="increment" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		name, current_value, increment
	</sql>
	<select id="selectByExample" parameterType="com.myBlog.domain.SequenceExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sequence
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sequence
		where name = #{name,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sequence
		where name = #{name,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.myBlog.domain.SequenceExample">
		delete from sequence
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.myBlog.domain.Sequence">
		insert into sequence (name, current_value, increment
		)
		values (#{name,jdbcType=VARCHAR}, #{currentValue,jdbcType=INTEGER},
		#{increment,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.myBlog.domain.Sequence">
		insert into sequence
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="currentValue != null">
				current_value,
			</if>
			<if test="increment != null">
				increment,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="currentValue != null">
				#{currentValue,jdbcType=INTEGER},
			</if>
			<if test="increment != null">
				#{increment,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.myBlog.domain.SequenceExample"
		resultType="java.lang.Long">
		select count(*) from sequence
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sequence
		<set>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.currentValue != null">
				current_value = #{record.currentValue,jdbcType=INTEGER},
			</if>
			<if test="record.increment != null">
				increment = #{record.increment,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sequence
		set name = #{record.name,jdbcType=VARCHAR},
		current_value = #{record.currentValue,jdbcType=INTEGER},
		increment = #{record.increment,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.myBlog.domain.Sequence">
		update sequence
		<set>
			<if test="currentValue != null">
				current_value = #{currentValue,jdbcType=INTEGER},
			</if>
			<if test="increment != null">
				increment = #{increment,jdbcType=INTEGER},
			</if>
		</set>
		where name = #{name,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.myBlog.domain.Sequence">
		update sequence
		set current_value = #{currentValue,jdbcType=INTEGER},
		increment = #{increment,jdbcType=INTEGER}
		where name = #{name,jdbcType=VARCHAR}
	</update>
	<!-- 以下为自己编写部分 -->
	<select id="getNowId" resultType="int">
		select nextval("Testseq")
	</select>
</mapper>